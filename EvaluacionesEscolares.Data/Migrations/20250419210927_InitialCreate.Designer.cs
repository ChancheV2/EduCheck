// <auto-generated />
using System;
using EvaluacionesEscolares.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvaluacionesEscolares.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250419210927_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Calificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int>("ExamenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("ExamenId");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Examen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAplicacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.ToTable("Examenes");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Estudio del idioma español y su literatura",
                            Nombre = "Lengua Española"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Estudio de números, cantidades y formas",
                            Nombre = "Matemática"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Estudio de los seres vivos",
                            Nombre = "Biología"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Estudio de la materia y la energía",
                            Nombre = "Física"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Estudio de la composición de la materia",
                            Nombre = "Química"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Estudio de la Tierra y sus características",
                            Nombre = "Geografía"
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Estudio de eventos pasados",
                            Nombre = "Historia"
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Desarrollo físico y deportivo",
                            Nombre = "Educación Física"
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Estudio de idiomas extranjeros",
                            Nombre = "Lengua Extranjera"
                        });
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Opcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsCorrecta")
                        .HasColumnType("bit");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextoOpcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PreguntaId");

                    b.ToTable("Opciones");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Pregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExamenId")
                        .HasColumnType("int");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextoPregunta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExamenId");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Calificacion", b =>
                {
                    b.HasOne("EvaluacionesEscolares.Entities.Estudiante", "Estudiante")
                        .WithMany("Calificaciones")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluacionesEscolares.Entities.Examen", "Examen")
                        .WithMany("Calificaciones")
                        .HasForeignKey("ExamenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Examen");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Examen", b =>
                {
                    b.HasOne("EvaluacionesEscolares.Entities.Materia", "Materia")
                        .WithMany("Examenes")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Opcion", b =>
                {
                    b.HasOne("EvaluacionesEscolares.Entities.Pregunta", "Pregunta")
                        .WithMany("Opciones")
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Pregunta", b =>
                {
                    b.HasOne("EvaluacionesEscolares.Entities.Examen", "Examen")
                        .WithMany("Preguntas")
                        .HasForeignKey("ExamenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examen");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Estudiante", b =>
                {
                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Examen", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Materia", b =>
                {
                    b.Navigation("Examenes");
                });

            modelBuilder.Entity("EvaluacionesEscolares.Entities.Pregunta", b =>
                {
                    b.Navigation("Opciones");
                });
#pragma warning restore 612, 618
        }
    }
}
